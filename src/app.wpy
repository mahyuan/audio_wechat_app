<style src="./style/common.css"></style>
<style src="./style/button.css"></style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import 'promise-polyfill'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/recommend',
      // 'pages/musicList',
      'pages/search',
      'pages/my',
      'pages/play',
      'pages/test'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#555',
      navigationBarTitleText: '好声音',
      navigationBarTextStyle: '#000'
    },
    tabBar: {
      'color': '#a9b7b7',
      'font-size': '40rpx',
      'selectedColor': '#ff3d3d',
      // 'navigationBarBackgroundColor': '#ff0',
      'borderStyle': 'black',
      'list': [{
        'pagePath': 'pages/index',
        'text': '发现音乐'
        // 'iconPath': 'images/icon1.png',
        // 'selectedIconPath': 'images/icon4.png'
      }, {
        'pagePath': 'pages/play',
        // 'iconPath': 'images/icon2.png',
        // 'selectedIconPath': 'images/icon5.png',
        'text': '播放'
      }, {
        'pagePath': 'pages/my',
        // 'iconPath': 'images/icon6.png',
        // 'selectedIconPath': 'images/icon3.png',
        'text': '账号'
      }]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync() {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
